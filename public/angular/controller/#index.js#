var app = angular.module("userInfo", ["ngRoute"]);
app.config(function ($routeProvider) {
    $routeProvider.when("/", {
        templateUrl: "profilePageCourseHad.html"
    }).when("/addCourse", {
        templateUrl: "addCourse.html"
    })
});<!-- views/profile.ejs -->
<!doctype html>
<html>

  <% var title = "Your Profile"; %>
  <%- include partials/header.ejs %>

  <style>
    .userInfo
    {
    float: left;
    width: 45%;
    
    }
    #RadarChart
    {
    float: right;
    width: 45%;
    }
    @media only screen
    and (min-device-width: 250px)
    and (max-device-width: 900px)
    {
    .userInfo
    {
    width: 100%;
    
    }
    #RadarChart
    {
    float: none;
    width: 100%;
    }
    #RadarChart #chart
    {
    width: 75%;
    }
    }
  </style>
  <div class="wrapper" ng-app="userInfo" ng-controller="profileCtrl" > 
    <div class="userInfo aside">
      <div class="well w3-closenav w3-right w3-xlarge">
	<div id="userInfo" style="display: block;">
	  <div ng-view></div>
	</div>
      </div>
    </div>

    <div id="RadarChart" >
      <div id="semester info"></div>
      <div id="chart"></div>
      <div id="skill_legend">
	<span class="notice"> This graph is a summary of {{courses.length}} course(s)</span>
      </div>
    </div>
  </div>

  <script src="/angular/controller/index.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-route.js"></script>


  <!-- scripts to show the radar charts, needs jquery loaded first -->
  <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.1.1.min.js"></script>
  <script src="/lib/radar_chart.js"></script> 
  <script src="/lib/radar_script.js"></script>
  <script src="/lib/profile_script.js"></script>
  
  <%- include partials/footer.ejs %>
</html>

var courseServices = function($http)
{
    var getUserInfo = function()
    {
	return $http.get('/profile/userInfo');
    }
    var getCourseList = function()
    {
	return $http.get('/courseList');
    }
    return
    {
	userInfo: getUserInfo
    }
}
app.controller('profileCtrl', function ($scope, $http, $location) {
   // console.log(courseServices);
/*    courseServices.userInfo().then(function(message)
				   {
				       var userData = message.data;
				       console.log(userData);
				   })*/
    $http.get('/profile/userInfo').then(function (res) {
        $scope.courses = res.data[0];
        $scope.skills = res.data[1];
	var semesters = [];
	for (var i = 0; i < res.data[0].length; i++) {
	        var term = res.data[0][i].season.replace(/\s/g,'') + " " + res.data[0][i].year;
	        if (semesters.indexOf(term) == -1) {
		    semesters.push(term);
		        }
	    }
	$scope.semesters = semesters;
	$scope.currentcourses = res.data[0];
	console.log($scope.currentcourses);
    });

    $http.get('/courseList').then(function (res) {
        for (var i = 0; i < res.data.length; i++) {
            res.data[i].id = i
        }
        $scope.courseList = res.data;
    });
    
    
    $scope.filter = function()
    {
	var divs = $('.checks');
	var courses = [];
	var semesters = [];
	
	for (var i = 0; i < divs.length; i ++)
	        {
		    
		    var divchildren = $(divs[i]).children();
		    if (divchildren[0].checked)
			    {
				
				semesters.push($(divchildren[1]).text());
				for (var j = 0; j < $scope.courses.length; j++)
				    {
					    
					var term = $scope.courses[j].season.replace(/\s/g,'') + " " + $scope.courses[j].year;
					if ($(divchildren[1]).text()== term)
					        {
						    courses.push($scope.courses[j]);
						        }
					    }
				    }
		        }
	
	$scope.currentcourses = [];
	$scope.currentcourses = courses;
	generateGraph(semesters);
    }
    
    $scope.restore = function()
    {
	$scope.currentcourses = $scope.courses;
	uncheckAll();
    }
    function uncheckAll()
    {
	var divs = $('.checks');
	var semestesr = [];
	for (var i = 0; i < divs.length; i++)
	        {
		    var divchildren = $(divs[i]).children();
		    divchildren[0].checked = false;
		    semesters.push($(divchildren[1]).text());
		        }
	generateGraph(semesters);
	
    }


    function generateGraph(semesters)
    {
	function getAllSkills()
	{
	        return $.ajax({
		    url: '/skillList',
		    type: 'GET',
		    async: false,
		    success: function(result){
			    skills = result;
			}
		        });
	    }
	function getCourseSkills()
	{
	        return $.ajax({
		    url: '/skillInfo',
		    type: 'GET',
		    async: false,
		    success: function(result){
			    course_skills = result;
			}
		        });
	    }

	var skills = null;
	var course_skills = null;
	getAllSkills()
	getCourseSkills();
	var aggregate = [];

	for(var i=0;i<skills.length;i++)
	    {
		    aggregate[skills[i].skill]=0;
		}
	


	var learned_skills = [];

	for(var i=0;i<semesters.length;i++)
	    {
		    var temp = [];
		    learned_skills.push(temp);
		    for(var j=0;j<course_skills.length;j++)
			    {
				if(semesters[i]==course_skills[j].season.replace(/\s/g,'') + " " + course_skills[j].year)
				    {
					    var containsSkill = learned_skills[i].filter(function(course) { return course.axis == course_skills[j].skill; })
					    if(containsSkill.length>0)
						    {
							containsSkill[0].value = course_skills[j].score + containsSkill[0].value;
							aggregate[course_skills[j].skill] +=course_skills[j].score;
							    }
					    else
						    {
							var json = JSON.parse('{"axis":"' + course_skills[j].skill + '","value":' + course_skills[j].score + '}');
							learned_skills[i].push(json);
							aggregate[course_skills[j].skill] +=course_skills[j].score;
							    }
					}
				    }
		}
	//adds 0's?
	for(var i=0;i<skills.length;i++)
	    {
		    for(var j=0;j<semesters.length;j++)
			    {
				var containsSkill = learned_skills[j].filter(function(course) { return course.axis == skills[i].skill; })
				if(containsSkill.length==0)
				    {
					    var json = JSON.parse('{"axis":"' + skills[i].skill + '","value":0}');
                    learned_skills[j].push(json);
					}
				    }
		}

	var total =[];
	for(var i=0;i<skills.length;i++)
	    {
		    var skill  = skills[i].skill;
		    var val = aggregate[skill];

		    var obj = {skill:skill,value:val};
		    total.push(obj);
		}
	console.log($('#skill_legend span').text());
	$('#skill_legend span').text( "This graph is a summary of " + $scope.currentcourses.length + " course(s)");
	RadarScript(["total"],[total],skills);
    }

});

